services:
  # Gemeinsame PostgreSQL-Datenbank f√ºr lokale Entwicklung
  postgres-shared:
    image: postgres:16-alpine
    container_name: postgres-shared
    environment:
      POSTGRES_DB: bookstore
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5436:5432"
    volumes:
      - postgres_shared_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bookstore"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - pim-ai-network

  # Auth-Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8081:8081"
    depends_on:
      postgres-shared:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-shared:5432/bookstore
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      MYBOOKSTORE_APP_JWTSECRET: IhrGeheimesSignierungsKey1234567890AbcXyz
      MYBOOKSTORE_APP_JWTEXPIRATIONMS: 3600000
      MYBOOKSTORE_APP_REFRESHTOKENDURATIONMS: 86400000
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: auth_service
    restart: unless-stopped
    networks:
      - pim-ai-network

  # Book-Service
  book-service:
    build:
      context: ./book-service
      dockerfile: Dockerfile
    container_name: book-service
    ports:
      - "8082:8082"
    depends_on:
      postgres-shared:
        condition: service_healthy
      auth-service:
        condition: service_started
    env_file:
      - .env
    environment:
      DATABASE_URL: jdbc:postgresql://postgres-shared:5432/bookstore
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      JWT_VALIDATION_ENABLED: "true"
      # Dasselbe JWT-Secret verwenden wie beim Auth-Service
      MYBOOKSTORE_APP_JWTSECRET: IhrGeheimesSignierungsKey1234567890AbcXyz
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: book_service
    restart: unless-stopped
    networks:
      - pim-ai-network

  # Product-Intelligence-Service
  product-intelligence-service:
    build:
      context: ./product-intelligence-service
      dockerfile: Dockerfile
    container_name: product-intelligence-service
    ports:
      - "8085:8085"
    depends_on:
      postgres-shared:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-shared:5432/bookstore
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: product_intelligence
    volumes:
      - ./google-credentials.json:/app/credentials/google-credentials.json
    restart: unless-stopped
    networks:
      - pim-ai-network

volumes:
  postgres_shared_data:

networks:
  pim-ai-network:
    driver: bridge