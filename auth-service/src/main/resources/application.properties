server.port=${PORT:8081}

# Datenbank-Konfiguration für eine gemeinsame Render.com-Datenbank
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5436/shared_db}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}

# JPA/Hibernate Konfiguration mit Tabellen-Präfix für Multitenancy
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# Tabellenpräfix für Auth-Service um Konflikte zu vermeiden
spring.jpa.properties.hibernate.physical_naming_strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.properties.hibernate.default_schema=auth_service

# SQL-Initialisierung
spring.sql.init.schema-locations=classpath:init.sql
spring.sql.init.mode=always

# JWT-Konfiguration
mybookstore.app.jwtSecret=${MYBOOKSTORE_APP_JWTSECRET:IhrGeheimesSignierungsKey1234567890AbcXyz}
mybookstore.app.jwtExpirationMs=${MYBOOKSTORE_APP_JWTEXPIRATIONMS:3600000}
mybookstore.app.refreshTokenDurationMs=${MYBOOKSTORE_APP_REFRESHTOKENDURATIONMS:86400000}

# Logging-Konfiguration
logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.com.pim.ai.connector=debug